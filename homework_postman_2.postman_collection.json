{
	"info": {
		"_postman_id": "343920c9-f328-4748-af90-8c515b7bdf37",
		"name": "homework_postman_2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "20702962"
	},
	"item": [
		{
			"name": "1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/first\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200.\r",
							"// 3. Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" // http://162.55.220.72:5005/user_info_3\r",
							" // 1. Отправить запрос.\r",
							" // 2. Статус код 200.\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// 3. Спарсить response body в json.\r",
							"var jsonRes = pm.response.json();\r",
							"\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками)\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonRes.name).to.eql('Maxim');\r",
							"});\r",
							"\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками)\r",
							"pm.test(\"Your age\", function () {\r",
							"    pm.expect(jsonRes.age).to.eql('23');\r",
							"});\r",
							"\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками)\r",
							"pm.test(\"Your salary\", function () {\r",
							"    pm.expect(jsonRes.salary).to.eql(1000);\r",
							"});\r",
							"\r",
							"// 7. Спарсить request.\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request)\r",
							"var req = pm.request.body.formdata.toObject();\r",
							"pm.test(\"request name\", function () {\r",
							"    pm.expect(jsonRes.name).to.eql(req.name);\r",
							"});\r",
							"\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request)\r",
							"pm.test(\"request age\", function () {\r",
							"    pm.expect(jsonRes.age).to.eql(req.age);\r",
							"});\r",
							"\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request)\r",
							"pm.test(\"request salary\", function () {\r",
							"    pm.expect(jsonRes.salary).to.eql(+req.salary);\r",
							"});\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							"\r",
							"var chiriq = pm.response.json();\r",
							"console.log(\"параметр family из response =\", chiriq.family)\r",
							"\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"salary check\", function () {\r",
							"    pm.expect(jsonRes.family.u_salary_1_5_year).to.eql(+req.salary*4);\r",
							"});\r",
							"console.log(jsonRes.family.u_salary_1_5_year)"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Maxim",
							"type": "text"
						},
						{
							"key": "age",
							"value": "23",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1000",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_3\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200.\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"// 4. Спарсить request.\r",
							"var jsonRes = pm.response.json();\r",
							"var req = pm.request.url.query.toObject();\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request)\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request)\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request)\r",
							"pm.test(\"Check name\", function () {\r",
							"    pm.expect(jsonRes.name).to.eql(req.name);\r",
							"});\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(jsonRes.age).to.eql(req.age);\r",
							"});\r",
							"pm.test(\"Check salary\", function () {\r",
							"    pm.expect(jsonRes.salary).to.eql(+req.salary);\r",
							"});\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"console.log(jsonRes.family)\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"Dog name\", function () {\r",
							"    pm.expect(jsonRes.family.pets.dog).to.have.property('name');\r",
							"});\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"Dog age\", function () {\r",
							"    pm.expect(jsonRes.family.pets.dog).to.have.property('age');\r",
							"});\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"Dog Luky\", function () {\r",
							"    pm.expect(jsonRes.family.pets.dog.name).to.eql('Luky');\r",
							"});\r",
							"// 12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"Dog age\", function () {\r",
							"    pm.expect(jsonRes.family.pets.dog.age).to.eql(4);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Maxim&age=23&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Maxim"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_4\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"// 4. Спарсить request.\r",
							"var jsonChir = pm.response.json();\r",
							"var reqchir = pm.request.url.query.toObject();\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"// 6. Проверить, что age в ответе равно age из request (age забрать из request.)\r",
							"pm.test(\"Check name\", function () { \r",
							"    pm.expect(jsonChir.name).to.eql(reqchir.name);\r",
							"});\r",
							"pm.test(\"Check age\", function () {\r",
							"    pm.expect(jsonChir.age).to.eql(+reqchir.age);\r",
							"});\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"console.log(jsonChir.salary)\r",
							"console.log(reqchir.salary)\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(jsonChir.salary[0])\r",
							"console.log(jsonChir.salary[1])\r",
							"console.log(jsonChir.salary[2])\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"0 salary=salary\", function () {\r",
							"    pm.expect(+reqchir.salary).to.eql(jsonChir.salary[0]);\r",
							"});\r",
							"pm.test(\"1 salary=salary*2\", function () {\r",
							"    pm.expect(reqchir.salary*2).to.eql(+jsonChir.salary[1]);\r",
							"});\r",
							"pm.test(\"2 salary=salary*3\", function () {\r",
							"    pm.expect(reqchir.salary*3).to.eql(+jsonChir.salary[2]);\r",
							"});\r",
							"// 15. Создать в окружении переменную name\r",
							"// 16. Создать в окружении переменную age\r",
							"// 17. Создать в окружении переменную salary\r",
							"\r",
							"// 18. Передать в окружение переменную name\r",
							"// 19. Передать в окружение переменную age\r",
							"// 20. Передать в окружение переменную salary\r",
							"\r",
							"// 21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Maxim&age=23&salary=1000",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Maxim"
						},
						{
							"key": "age",
							"value": "23"
						},
						{
							"key": "salary",
							"value": "1000"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/user_info_2\r",
							"// 1. Вставить параметр salary из окружения в request\r",
							"// 2. Вставить параметр age из окружения в age\r",
							"// 3. Вставить параметр name из окружения в name\r",
							"\r",
							"// 4. Отправить запрос.\r",
							"// 5. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 6. Спарсить response body в json.\r",
							"// 7. Спарсить request.\r",
							"var jsonCh = pm.response.json();\r",
							"var reqch = pm.request.url.query.toObject();\r",
							"// 8. Проверить, что json response имеет параметр start_qa_salary\r",
							"// 9. Проверить, что json response имеет параметр qa_salary_after_6_months\r",
							"// 10. Проверить, что json response имеет параметр qa_salary_after_12_months\r",
							"// 11. Проверить, что json response имеет параметр qa_salary_after_1.5_year\r",
							"// 12. Проверить, что json response имеет параметр qa_salary_after_3.5_years\r",
							"\r",
							"// 13. Проверить, что json response имеет параметр person\r",
							"// 14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)\r",
							"// 15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)\r",
							"// 16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});\r",
							"// 17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)\r",
							"// 18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)\r",
							"// 19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});\r",
							"// 20. Проверить, что что параметр u_age равен age из request (age забрать из request.)\r",
							"// 21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)\r",
							"// 22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});\r",
							"pm.test(\"Your test name\", function () {\r",
							"    pm.expect(jsonData.value).to.eql(100);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}